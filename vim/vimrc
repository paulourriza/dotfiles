" vimrc
" author: Paulo Urriza
" email: <pmurriza@gmail.com>

set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/dotfiles/vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'chriskempson/base16-vim'
Plugin 'christoomey/vim-sort-motion'
Plugin 'christoomey/vim-system-copy'
Plugin 'easymotion/vim-easymotion'
Plugin 'lervag/vimtex'
Plugin 'scrooloose/nerdtree'
Plugin 'terryma/vim-smooth-scroll'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'vim-scripts/ReplaceWithRegister'
Plugin 'vimoutliner/vimoutliner'
Plugin 'vimwiki/vimwiki'
call vundle#end()

" vim built-in packages
if v:version >= 800
 	packadd! matchit
endif

" look and feel
filetype plugin indent on
syntax on
set encoding=UTF-8
set number
set relativenumber
set colorcolumn=80
if &term=~'linux'
	" default colorscheme for tty
else
	if filereadable(expand("/home/pmurriza/.vimrc_background"))
		let base16colorspace=256
		source /home/pmurriza/.vimrc_background
	endif
endif
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='simple'

" for gvim Windows
if has('gui_win32')
	colorscheme base16-default-dark
	autocmd GUIEnter * set vb t_vb=
	set guifont=Source_Code_Pro:h11:cANSI:qDRAFT
	set guioptions= "remove menubar in gvim
endif

" fuzzy file finder
set path+=**
set wildmenu

" search
set incsearch

" get pasting to work on gVim
set clipboard=

" key remaps
ino jk <ESC>
let mapleader=","
nn <Enter> o<ESC>
nn <S-Enter> O<ESC>
nn <C-e> 5<C-e>
nn <C-y> 5<C-y>
nn <leader>c :%s/\s\+$//e<CR>
map <C-n> :NERDTreeToggle<CR>
nn <F5> "=strftime("%c")<CR>P
ino <F5> <C-R>=strftime("%c")<CR>
no <silent> <c-u> :call smooth_scroll#up(&scroll, 0, 2)<CR>
no <silent> <c-d> :call smooth_scroll#down(&scroll, 0, 2)<CR>
no <silent> <c-b> :call smooth_scroll#up(&scroll*2, 0, 4)<CR>
no <silent> <c-f> :call smooth_scroll#down(&scroll*2, 0, 4)<CR>
" evaluate mathematical expression with =
nn Q yt=f=a<space><C-r>=<C-r>"<CR><ESC>
" vim training - unmap arrow keys
no <down> <Nop>
no <left> <Nop>
no <right> <Nop>
no <up> <Nop>
ino <down> <Nop>
ino <left> <Nop>
ino <right> <Nop>
ino <up> <Nop>

" allow repeated action on visual-lines
vno . :norm.<CR>

" key remaps for vimwiki
nmap <leader>wq <Plug>VimwikiVSplitLink
nmap <leader>we <Plug>VimwikiSplitLink

" spelling
set spelllang=en_us
nn <leader>f 1z=
nn <leader>s :set spell!<CR>

" find and replace
set smartcase

" prevent status bar from being covered by command line
set laststatus=2

" settings to use vim as C++ ide
set exrc

" default tabstops
set tabstop=2
set shiftwidth=2
set mouse=a
set textwidth=130

" dev - settings that help for code dev
command! MakeTags !ctags -R .

" load in abbreviations (snippets)
source ~/dotfiles/vim/abbreviations.vim
